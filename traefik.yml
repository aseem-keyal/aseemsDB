version: '3.8'
services:
  traefik:
    image: 'traefik:v2.2'
    ports:
      - '80:80'
      - '443:443'
    deploy:
      placement:
        constraints:
          - node.labels.traefik-public.traefik-public-certificates == true
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - >-
          traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable
          not set}:${HASHED_PASSWORD?Variable not set}
        - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
        - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
        - >-
          traefik.http.routers.traefik-public-http.rule=Host(`${DOMAIN?Variable
          not set}`)
        - traefik.http.routers.traefik-public-http.entrypoints=http
        - traefik.http.routers.traefik-public-http.middlewares=https-redirect
        - >-
          traefik.http.routers.traefik-public-https.rule=Host(`${DOMAIN?Variable
          not set}`)
        - traefik.http.routers.traefik-public-https.entrypoints=https
        - traefik.http.routers.traefik-public-https.tls=true
        - traefik.http.routers.traefik-public-https.service=api@internal
        - traefik.http.routers.traefik-public-https.tls.certresolver=le
        - traefik.http.routers.traefik-public-https.middlewares=admin-auth
        - traefik.http.services.traefik-public.loadbalancer.server.port=8080
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
      - 'traefik-public-certificates:/certificates'
    command:
      - '--providers.docker'
      - >-
        --providers.docker.constraints=Label(`traefik.constraint-label`,
        `traefik-public`)
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.swarmmode'
      - '--entrypoints.http.address=:80'
      - '--entrypoints.https.address=:443'
      - '--certificatesresolvers.le.acme.email=${EMAIL?Variable not set}'
      - '--certificatesresolvers.le.acme.storage=/certificates/acme.json'
      - '--certificatesresolvers.le.acme.tlschallenge=true'
      - '--accesslog'
      - '--log'
      - '--api'
    networks:
      - traefik-public
  aseemsdb:
    image: 'akeyal/aseemsdb:latest'
    volumes:
      - '../packet_archive:/app/static/packet_archive'
      - '../recollconf:/root/.recoll'
    networks:
      - traefik-public
    deploy:
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - >-
          traefik.http.routers.aseemsdb-http.rule=Host(`${ASEEMSDB_DOMAIN?Variable
          not set}`)
        - traefik.http.routers.aseemsdb-http.entrypoints=http
        - traefik.http.routers.aseemsdb-http.middlewares=https-redirect
        - >-
          traefik.http.routers.aseemsdb-https.rule=Host(`${ASEEMSDB_DOMAIN?Variable
          not set}`)
        - traefik.http.routers.aseemsdb-https.entrypoints=https
        - traefik.http.routers.aseemsdb-https.tls=true
        - traefik.http.routers.aseemsdb-https.tls.certresolver=le
        - traefik.http.services.aseemsdb.loadbalancer.server.port=80
      update_config:
        order: start-first
        failure_action: rollback
        delay: 10s
      rollback_config:
        parallelism: 0
        order: stop-first
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "pgrep", "gunicorn"]

volumes:
  traefik-public-certificates: null
networks:
  traefik-public:
    external: true

